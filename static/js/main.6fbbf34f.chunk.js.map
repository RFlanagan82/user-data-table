{"version":3,"sources":["components/columns.js","components/GlobalFilter.js","components/DataTable.js","components/PageHeader.js","components/Blurb.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["COLUMNS","Header","accessor","GlobalFilter","filter","setFilter","id","value","onChange","e","target","DataTable","columns","useMemo","data","my_data","tableInstance","useTable","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","class","row","getRowProps","cells","cell","getCellProps","PageHeader","Blurb","Footer","href","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"kPAAaA,EAAU,CAKrB,CACEC,OAAQ,aACRC,SAAU,aAEZ,CACED,OAAQ,YACRC,SAAU,YAEZ,CACED,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,kBACRC,SAAU,WCHCC,EAdM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC9B,OACE,qBAAKC,GAAG,cAAR,SACE,4CACW,GACT,uBACEC,MAAOH,GAAU,GACjBI,SAAU,SAACC,GAAD,OAAOJ,EAAUI,EAAEC,OAAOH,gBC2E/BI,EA9EG,WAChB,IAAMC,EAAUC,mBAAQ,kBAAMb,IAAS,IACjCc,EAAOD,mBAAQ,kBAAME,IAAS,IAE9BC,EAAgBC,mBACpB,CACEL,QAASA,EACTE,KAAMA,GAERI,kBACAC,aAIAC,EAOEJ,EAPFI,cACAC,EAMEL,EANFK,kBACAC,EAKEN,EALFM,aACAC,EAIEP,EAJFO,KACAC,EAGER,EAHFQ,WACAC,EAEET,EAFFS,MACAC,EACEV,EADFU,gBAGMC,EAAiBF,EAAjBE,aAER,OACE,qCACE,cAAC,EAAD,CAAcvB,OAAQuB,EAActB,UAAWqB,IAC/C,8BACE,kDAAWN,KAAX,cACE,gCACGE,EAAaM,KAAI,SAACC,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,GAAD,OACvB,+CAAQA,EAAOC,eAAeD,EAAOE,yBAArC,cACGF,EAAOG,OAAO,UACf,+BACGH,EAAOI,SACNJ,EAAOK,aACL,iCACG,KACD,mBAAGC,MAAM,yBAGX,iCACG,KACD,mBAAGA,MAAM,uBAIb,oBAQd,iDAAWjB,KAAX,aACGE,EAAKK,KAAI,SAACW,GAET,OADAf,EAAWe,GAET,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMb,KAAI,SAACc,GACd,OACE,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKP,OAAO,iCC1DjDS,EAXI,WACjB,OACE,qBAAKN,MAAM,4BAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,YAAV,wBACA,mBAAGA,MAAM,OAAT,gDCDOO,EAJD,WACZ,OAAO,qBAAKvC,GAAG,QAAR,kDCSMwC,EAVA,WACb,OACE,qBAAKR,MAAM,4CAAX,SACE,uBAAMA,MAAM,eAAZ,gBACK,mBAAGS,KAAK,iCAAR,8B,MCEI,SAASC,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OCdN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASxB,OACP,cAAC,IAAMyB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6fbbf34f.chunk.js","sourcesContent":["export const COLUMNS = [\n  // {\n  //   Header: \"ID\",\n  //   accessor: \"id\",\n  // },\n  {\n    Header: \"First Name\",\n    accessor: \"firstName\",\n  },\n  {\n    Header: \"Last Name\",\n    accessor: \"lastName\",\n  },\n  {\n    Header: \"Email\",\n    accessor: \"email\",\n  },\n  {\n    Header: \"Github Username\",\n    accessor: \"github\",\n  },\n];\n","import React from \"react\";\n\nconst GlobalFilter = ({ filter, setFilter }) => {\n  return (\n    <div id=\"search-span\">\n      <span>\n        Search: {\"\"}\n        <input\n          value={filter || \"\"}\n          onChange={(e) => setFilter(e.target.value)}\n        />\n      </span>\n    </div>\n  );\n};\n\nexport default GlobalFilter;\n","import React, { useMemo } from \"react\";\nimport { useTable, useSortBy, useGlobalFilter } from \"react-table\";\nimport my_data from \"./my_data.json\";\nimport { COLUMNS } from \"./columns\";\nimport GlobalFilter from \"./GlobalFilter\";\n\nconst DataTable = () => {\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => my_data, []);\n\n  const tableInstance = useTable(\n    {\n      columns: columns,\n      data: data,\n    },\n    useGlobalFilter,\n    useSortBy\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = tableInstance;\n\n  const { globalFilter } = state;\n\n  return (\n    <>\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n      <div>\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render(\"Header\")}\n                    <span>\n                      {column.isSorted ? (\n                        column.isSortedDesc ? (\n                          <span>\n                            {\"  \"}\n                            <i class=\"fas fa-arrow-down\"></i>\n                          </span>\n                        ) : (\n                          <span>\n                            {\"  \"}\n                            <i class=\"fas fa-arrow-up\"></i>\n                          </span>\n                        )\n                      ) : (\n                        \"\"\n                      )}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default DataTable;\n","import React from \"react\";\n\nconst PageHeader = () => {\n  return (\n    <div class=\"jumbotron jumbotron-fluid\">\n      <div class=\"container\">\n        <h1 class=\"display-4\">Our Cohort</h1>\n        <p class=\"lead\">GT-ATL-FSF-FT-08-2020-U-C-MF</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PageHeader;\n","import React from \"react\";\n\nconst Blurb = () => {\n  return <div id=\"blurb\">Click on any column header to sort.</div>;\n};\n\nexport default Blurb;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <nav class=\"navbar fixed-bottom navbar-light bg-light\">\n      <span class=\"navbar-brand\">\n        by <a href=\"https://github.com/judeclark19\">Jude Clark</a>\n      </span>\n    </nav>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport DataTable from \"./components/DataTable\";\nimport PageHeader from \"./components/PageHeader\";\nimport Blurb from \"./components/Blurb\";\nimport Footer from \"./components/Footer\";\n// import GlobalFilter from \"./components/GlobalFilter\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <PageHeader />\n      <Blurb />\n      <DataTable />\n      <Footer />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}